const cardPairs = [
  { icon: "üóΩ", text: "T∆∞·ª£ng N·ªØ th·∫ßn T·ª± do" },
  { icon: "üî•", text: "H√†nh h√¨nh ki·ªÉu Lins∆°" },
  { icon: "‚úä", text: "Phong tr√†o ƒë·∫•u tranh" },
  { icon: "‚öñÔ∏è", text: "B·∫•t c√¥ng & Ph√¢n bi·ªát ch·ªßng t·ªôc" },
  { icon: "üìú", text: "Tuy√™n ng√¥n ƒê·ªôc l·∫≠p 1776." },
  { icon: "üåç", text: "ƒêo√†n k·∫øt qu·ªëc t·∫ø" },
  { icon: "üèõÔ∏è", text: "ThƒÉm ƒë·ªãa danh l·ªãch s·ª≠" },
  { icon: "üè®", text: "Kh√°ch s·∫°n Omni Parker House" }
];

// T·∫°o m·∫£ng th·∫ª g·ªìm c·∫£ icon v√† text
let cards = [];
cardPairs.forEach((pair, index) => {
  cards.push({ id: index, content: pair.icon });
  cards.push({ id: index, content: pair.text });
});

// Tr·ªôn m·∫£ng th·∫ª
cards.sort(() => 0.5 - Math.random());

const gameBoard = document.getElementById("game-board");
let firstCard = null;
let lockBoard = false;

function createCard(cardData) {
  const card = document.createElement("div");
  card.classList.add("card");
  card.dataset.id = cardData.id;
  card.dataset.content = cardData.content;

  card.innerHTML = `<span class="front"></span><span class="back">${cardData.content}</span>`;

  card.addEventListener("click", flipCard);
  gameBoard.appendChild(card);
}

function flipCard() {
  if (lockBoard) return;
  if (this === firstCard) return;

  this.classList.add("flipped");

  if (!firstCard) {
    firstCard = this;
    return;
  }

  const secondCard = this;
  checkMatch(firstCard, secondCard);
}

function checkMatch(card1, card2) {
  if (card1.dataset.id === card2.dataset.id) {
    // Gi·ªØ nguy√™n n·∫øu kh·ªõp
    firstCard = null;
  } else {
    // L·∫≠t l·∫°i n·∫øu sai
    lockBoard = true;
    setTimeout(() => {
      card1.classList.remove("flipped");
      card2.classList.remove("flipped");
      lockBoard = false;
      firstCard = null;
    }, 1000);
  }
}

// T·∫°o b√†n ch∆°i
cards.forEach(createCard);
